static ArrayList<Integer> subarraySum(int[] arr, int n, int s) 
    {
        // Your code here
        if(s == 0) return new ArrayList<Integer> (Arrays.asList(-1));
        int sum = 0;
        int i = 0;
        int j = 0;
        
        while (j<n){
            if(sum < s){
                sum += arr[j];
            }
            while(sum > s){
                sum -= arr[i];
                i++;
            }
            if(sum == s){
                return new ArrayList<Integer> (Arrays.asList(i + 1, j + 1));
            }
            j++;
        }
                return new ArrayList<Integer> (Arrays.asList(-1));
    }
    
    
    ===================[============
    
    int sum = 0;
        int start = 0;
        int end = 0;
        
        for(int i = 0; i<n; i++){
            sum += arr[i];
            
            while(sum > s  && start <= i-1 ){
                sum -= arr[start++];
            }
            if(sum == s){
                return new ArrayList<Integer> (Arrays.asList(start + 1, i + 1));
            }
        }
        
        return new ArrayList<Integer> (Arrays.asList(-1));
        
        
         ===================[============
        
        
         ArrayList<Integer> ans = new ArrayList<>();
        int start = 0, currSum = arr[0];
        for (int i = 1; i <= size; i++) {
            while (currSum > s && start < i-1) {
                currSum -= arr[start];
                start+=1;
            }
            if (currSum == s) {
                ans.add(start+1);
                ans.add(i);
                break;
            }

            if (i < size) currSum += arr[i];
        }
        if (ans.size() > 0) return ans;
        else {
            ans.add (-1);
            return ans;
        }
