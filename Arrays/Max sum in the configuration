

int max_sum(int arr[],int n)
    {
    //Your code here
        int cum_sum = 0;
        for(int i =0; i<n; i++)
            cum_sum += arr[i];
            
        int curr_val = 0;
        for(int i =0; i<n; i++)
            curr_val += i*arr[i];
        
        int res = curr_val;
        
        for(int i=1; i<n; i++){
            int next_val = curr_val - (cum_sum - arr[i-1]) + arr[i-1] * (n-1);
            curr_val = next_val;
            res = Math.max(res, next_val);
        }
        return res;
    }
    
    /*----------------------------------*/

int max_sum(int nums[], int n)
    {
	// Your code here
  int ans=Integer.MAX_VALUE;
  int sum=0;
  int total=0;
  for(int i=0;i<n;i++)
  {
      sum+=i*nums[i];
      total+=nums[i];
  }
  ans=sum;
  for(int i=n-1;i>=1;i--)
  {
      int nextsum=sum+total-n*nums[i];
      ans=Math.max(ans,nextsum);
      sum=nextsum;
  }
  return ans;
    }	
    
/*----------------------------------*/

int max_sum(int A[],int n)
{
//Your code here
int sum =0;
int prev =0;
for(int i=0; i<n;i++){
    sum+=A[i];
    prev+=(A[i]*i);
}
int mx = prev;
for(int i=0; i<n;i++){
    prev = (prev-(sum-A[i]))+(A[i]*(n-1));
    mx = max(mx,prev);
}
return mx;
}
