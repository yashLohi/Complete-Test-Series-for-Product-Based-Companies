 public static int NumberofElementsInIntersection(int a[], int b[], int n, int m) {
        // Your code here
        Arrays.sort(a);
        Arrays.sort(b);
        int i = 0;
        int j = 0;
        
        int count = 0;
        while(i<n && j<m){
            if(a[i] == a[i-1]){
                i++;
                continue;
            }
            if(a[i] < b[j]){
                i++;
            }
            else if(a[i] > b[j]){
                j++;
            }
            else{
                // a[i] == b[j];
                count++;
                i++;
                j++;
            }
        }
        return count;
    }
    
    ====================================
    public static int NumberofElementsInIntersection(int a[], int b[], int n, int m) {
        // Your code here
        HashSet<Integer> map=new HashSet<>();
        for(int i=0; i<n; i++){
            map.add(a[i]);
        }
        int count=0;
        for(int i=0; i<m; i++){
            if(map.contains(b[i])){
                count++;
                map.remove(b[i]);
            }
            
        }
        return count;
        ======================
         HashSet<Integer> set = new HashSet<>();
        for(int val:a) set.add(val);
        HashSet<Integer> set1 = new HashSet<>();
        for(int val:b) set1.add(val);
        
        set.retainAll(set1);
        return set.size()
        
        =====================
        
